
@using DicomApp.CommonDefinitions.DTO;
@using DicomApp.CommonDefinitions.DTO.AdvertisementDTOs;
@model List<AdsDTO>
@if (Model != null && Model.Count > 0)
{
    foreach (var item in Model.GroupBy(g => g.DeliveryManId))
    {
        <tr>
            <td>@item.FirstOrDefault().DeliveryManName</td>
            <td>@item.Count()</td>
            <td>
                <b>Pending</b> : @item.Where(s => s.StatusId == (int)EnumStatus.Assigned_For_Delivery
                                               || s.StatusId == (int)EnumStatus.Out_For_Delivery
                                               || s.StatusId == (int)EnumStatus.Assigned_For_Pickup
                                               || s.StatusId == (int)EnumStatus.Picked_Up
                                               || s.StatusId == (int)EnumStatus.Assigned_For_Return
                                               || s.StatusId == (int)EnumStatus.Out_For_Return).Count() <br />
                <b>Delivered</b> : @item.Where(s => s.StatusId == (int)EnumStatus.Delivered).Count()<br>
                <b>Canceled</b> : @item.Where(s => s.StatusId == (int)EnumStatus.Cancelled).Count()<br>
            </td>
            <td>@item.Count()</td>
            <td>@item.Where(s => s.StatusId == (int)EnumStatus.Assigned_For_Pickup || s.StatusId == (int)EnumStatus.Picked_Up).Count() </td>
            <td><b>@(item.Count() > 0 ? (100 * item.Count(p => p.StatusId == (int)EnumStatus.Delivered) / @item.Count()) : 0) %</b></td>
            <td></td>
        </tr>
    }
}
else
{
    <tr>
        <td colspan="20">
            <h6 class="text-center text-danger my-5">No data available in table</h6>
        </td>
    </tr>
}
<input type="hidden" value="@(Model != null ? Model.Count:0)" id="DataCount" />