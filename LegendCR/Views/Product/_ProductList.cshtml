@* 
@using LegendCR.CommonDefinitions.DTO.VendorProductDTOs
@using LegendCR.CommonDefinitions.DTO
@using LegendCR.Helpers;
@model ViewModel<VendorProductDTO>
@{
    var Role = AuthHelper.GetClaimValue(User, "RoleID");
}
<main>
    <div class="container-fluid site-width">
        <!-- START: Filter-->
        <div class="row Red-Row">
            <div class="col-12 col-lg-12 col-xl-12 col-sm-12">
                <div class="sub-header py-5 d-flex">
                    <div>
                        <span class="Header-Titel">Products</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END: Filter-->
    <div class="Shipment-container">
        <!-- Start: Filter-->
        <div class="row Red-Row">
            @{
                await Html.RenderPartialAsync("_ToolsRow", new OptionDTO 
                { Action = "ProductList",
                Controller = "Product", 
                Lookup = Model.Lookup,
                SelectListType = new byte[] {
                    (byte)EnumSelectListType.Vendor }
                });
            }
            <div class="row Red-Row w-100">
                <div class="col-lg-12 RedBtn-Section">
                    <a href="#" data-toggle="modal" data-target="#AddProduct-Model" class="Red-Btn"><img class="mr-2 w-20" src="~/dist/images/Icons/Total.png" />Add Product</a>
                </div>
            </div>
        </div>
        <!-- END  : Filter-->
    </div>
    <div class="col-12">
        <span id="Ajaxloader" class="Ajaxloader d-none"></span>
    </div>
    <div class="Table-container">
        <table id="Red-Table" class="table">
            <thead>
                <tr>
                    @if(Role != EnumRole.Vendor.ToString()){
                        <td>Vendor Name</td>
                    }
                    <td class="Sort-Column">Item Code</td>
                    <td class="Sort-Column">Item Name</td>
                    <td class="Sort-Column">Item Size</td>
                    <td>Item Price</td>
                    <td>Available Stock</td>
                    <td>Description</td>
                    <td>Image</td>
                    <td>Action</td>
                </tr>
            </thead>
            <tbody>
                <partial name="_ProductTable" model="Model.ObjDTOs" />
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="10">
                        @{
                            await Html.RenderPartialAsync("_Pagination", new OptionDTO { Action = "shipmentsReport", Controller = "User", Count = Model.ObjDTOs.Count });
                        }
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>

    <!-- Add New Product Model -->
    <div class="modal fade" id="AddProduct-Model" tabindex="-1" role="dialog" aria-labelledby="AddProductLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div>
                    <button type="button" class="close m-2" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h2 class="Model-Titel">Add New Product</h2>
                    <form asp-action="AddProduct" asp-controller="Product" class="needs-validation" method="post" novalidate enctype="multipart/form-data" id="AddProduct-Form">
                        <div class="container-fluid P-Model">
                            <div class="row pt-3">
                                <div class="col-lg-6">
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Name</label>
                                        <input class="input-Model" type="text" required placeholder="Product Name" name="Name" id="Name" />
                                        <div class="invalid-feedback">
                                            Please enter Name. of Product.
                                        </div>
                                    </div>
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Price</label>
                                        <input class="input-Model" type="number" min="0" name="OriginalPrice" placeholder="Price" id="OriginalPrice" required />
                                        <div class="invalid-feedback">
                                            Please enter Price. of Product.
                                        </div>
                                    </div>
                                   @if(Role != (int)EnumRole.Vendor){
                                    <div class="col-lg-12 pt-3">
                                        <label class="Red-Label">Account</label>
                                            @Html.DropDownList("VendorId", new SelectList(Model.Lookup.VendorDTOs, "Id", "Name"),"--- Select Account ---", new { @class = "input-Model select" ,@required="required"})
                                        <div class="invalid-feedback">
                                            Please Select Account
                                        </div>
                                    </div>
                                    }
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Size</label>
                                        <input class="input-Model" required id="Size" name="Size" placeholder="Size" />
                                        <div class="invalid-feedback">
                                            Please enter Size. of Product.
                                        </div>
                                    </div>
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Description</label>
                                        <textarea rows="4" class="input-Model h-auto" required name="Description" placeholder="Description" id="Description"></textarea>
                                        <div class="invalid-feedback">
                                            Please enter Description. of Product.
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="col-lg-12">
                                        <p class="Label-Model Add-img m-0" onclick="OpenFileInput('AddProduct-Form')">Image</p>
                                        <img src="/dist/images/Partial.png" id="VendorProductImg" class="w-100" onclick="OpenFileInput('AddProduct-Form')" />
                                        <input id="ImgFile" data-id="ImgFile" name="file" type="file" onchange="DisplayUpdateImg(event)" accept="image/gif, image/jpeg, image/png" hidden class="img" />
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <button class="Red-Btn-OutLine OutLine-Red Btn-Model m-2" onclick="ProdactForm('AddProduct','Product','AddProduct-Form')" type="button" id="BtnSend">
                                        Add Product
                                        <span class="Spinner spinner-border spinner-border-sm ml-2 mb-1 d-none" role="status" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Product Model -->
    <div class="modal fade" id="EditForm" tabindex="-1" role="dialog" aria-labelledby="EditForm" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div>
                    <button type="button" class="close m-2" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h2 class="Model-Titel">Edit Product</h2>
                    <form asp-action="" asp-controller="" class="needs-validation" method="post" novalidate enctype="multipart/form-data" id="EditProduct-Form">
                        <div class="container-fluid P-Model">
                            <div class="row pt-3">
                                <div class="col-lg-6">
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Name</label>
                                        <input class="input-Model" type="text" required placeholder="Product Name" name="Name" id="Name" />
                                        <div class="invalid-feedback">
                                            Please enter Name. of Product.
                                        </div>
                                    </div>
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Price</label>
                                        <input class="input-Model" type="number" min="0" name="OriginalPrice" placeholder="Price" id="OriginalPrice" required />
                                        <div class="invalid-feedback">
                                            Please enter Price. of Product.
                                        </div>
                                    </div>
                                    @if (Role != (int)EnumRole.Vendor)
                                    {
                                        <div class="col-lg-12 pt-3">
                                            <label class="Red-Label">Account</label>
                                            @Html.DropDownList("VendorId", new SelectList(Model.Lookup.VendorDTOs, "Id", "Name"),"--- Select Account ---", new { @class = "input-Model select" ,@required="required"})
                                            <div class="invalid-feedback">
                                                Please Select Account
                                            </div>
                                        </div>
                                    }
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Size</label>
                                        <input class="input-Model" required id="Size" name="Size" placeholder="Size" />
                                        <div class="invalid-feedback">
                                            Please enter Size. of Product.
                                        </div>
                                    </div>
                                    <div class="col-lg-12 pt-3">
                                        <label class="Label-Model">Description</label>
                                        <textarea rows="4" class="input-Model h-auto" required name="Description" placeholder="Description" id="Description"></textarea>
                                        <div class="invalid-feedback">
                                            Please enter Description. of Product.
                                        </div>
                                    </div>
                                </div>
                                <input id="VendorProductId" name="VendorProductId" type="hidden" />
                                <input id="ImageUrl" name="ImageUrl" type="hidden" />
                                <div class="col-lg-6">
                                    <div class="col-lg-12">
                                        <p class="Label-Model Add-img m-0" onclick="OpenFileInput('EditProduct-Form')">Image</p>
                                        <img src="/dist/images/Partial.png" id="VendorProductImg" class="w-100" onclick="OpenFileInput('EditProduct-Form')" />
                                        <input id="ImgFile" data-id="ImgFile" name="file" type="file" onchange="DisplayUpdateImg(event)" accept="image/gif, image/jpeg, image/png" hidden class="img" />
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <button class="Red-Btn-OutLine OutLine-Red Btn-Model m-2" onclick="ProdactForm('EditProduct','Product','EditProduct-Form')" type="button" id="BtnSend">
                                        Edit Products
                                        <span class="Spinner spinner-border spinner-border-sm ml-2 mb-1 d-none" role="status" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>
<script src="~/dist/js/jquery.validate.min.js"></script>
<script src="~/dist/js/jquery.validate.unobtrusive.min.js"></script>
<script>
    function DeletePorduct(id) {
        $.ajax({
            url: `/Product/DeletProduct/${id}`,
            contentType: false,
            type: 'POST',
            data: id,
            processData: false,
            dataType: 'json',
            success: function (result) {
                $(`#DeleteModal_${id}`).modal('hide');
                $(`#Product_${id}`).fadeOut(1000);
                if (result != null) {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: result,
                        showConfirmButton: false,
                        timer: 3000
                    });
                }
                $(`Product_${id}`).remove();
            }
        });
    }
    //$("#Name").keyup(function () {
    //    let value = $("#Name").val().length;
    //    if (value > 100) {
    //        $("#ProductNametxt").removeClass('d-none');
    //    }
    //    else {
    //        $("#ProductNametxt").addClass('d-none');

    //    }
    //})
</script>

 *@