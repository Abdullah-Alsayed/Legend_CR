
@using LegendCR.CommonDefinitions.DTO;
@using LegendCR.CommonDefinitions.DTO;
@using LegendCR.Helpers;
@using LegendCR.BL.Services;
@using LegendCR.DAL.DB;
@model List<PackingDTO>
<main>
    <div class="container-fluid site-width">
        <!-- START: Filter-->
        <div class="row Red-Row">
            <div class="col-12 col-lg-12 col-xl-12 col-sm-12">
                <div class="sub-header py-5">
                    <div>
                        <span class="Header-Titel">Packaging Stock Report</span>
                    </div>
                </div>
                <div class="Box-Info">
                    <div>
                        <span class="Yellow-info-Bg"><img src="~/dist/images/Icons/Total.png"></span>
                        <p>Total Items</p>
                        <b>@ViewBag.TotalStock</b>
                        <img class="Img-Box-info" src="~/dist/images/box.png">
                    </div>
                    <div>
                        <span class="Yellow-info-Bg"><img src="~/dist/images/Icons/Shipped.png"></span>
                        <p>Used Stock</p>
                        <b>@ViewBag.UsedStock</b>
                        <img class="Img-Box-info" src="~/dist/images/box.png">

                    </div>
                    <div>
                        <span class="Yellow-info-Bg"><img src="~/dist/images/Icons/Remaining.png"></span>
                        <p>Remaining Stock</p>
                        <b>@ViewBag.RemainingStock</b>
                        <img class="Img-Box-info" src="~/dist/images/box.png">

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END: Filter-->
    <div class="Shipment-container">
        <!-- Start: Filter-->
        <div class="row Red-Row">
            @{
                await Html.RenderPartialAsync("_ToolsRow", new OptionDTO { Action = "PackagingReport", Controller = "Packing", SelectListType = new byte[] { (byte)EnumSelectListType.PackingType, (byte)EnumSelectListType.Quantity } });
            }
        </div>
        <!-- END  : Filter-->
    </div>
    <div class="col-12">
        <span id="Ajaxloader" class="Ajaxloader d-none"></span>
    </div>
    <div class="Table-container">
        <table class="table" id="Red-Table">
            <thead>
                <tr>
                   
                    <td>Code</td>
                    <td class="Sort-Column">Name</td>
                    <td>Description</td>
                    <td>Size</td>
                    <td>Number</td>
                    <td class="text-center">Image</td>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.id</td>
                            <td>@item.NameEn</td>
                            <td class="">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod</td>
                            <td> @item.Size </td>
                            <td>@item.Count</td>
                            <td class="text-center"><img src="~/dist/images/@item.ImgUrl" width="97" /></td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7">
                            <h6 class="text-center text-danger my-5">No data available in table</h6>
                        </td>
                    </tr>
                }

            </tbody>
           <tfoot>
                <tr>
                    <td colspan="10">
                        @{
                            await Html.RenderPartialAsync("_Pagination", new OptionDTO { Action = "PackagingReport", Controller = "packing" });
                        }
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>

    <!-- START: Card Data-->
</main>